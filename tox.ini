# 全局配置
[tox]

# 指定 Tox 的最低版本
minversion = 4.4.4

# 允许跳过缺失的 Python 解释器
skip_missing_interpreters = {env:TOX_SKIP_MISSING_INTERPRETERS:True}

# 列出要创建的虚拟环境，涵盖不同的 Python 版本及其他任务（文档、代码风格检查、类型检查）。
envlist =
    py38,
    py39,
    py310,
    py311,
    py312,
    py313,
    docs,
    lint,
    type,

# 用于从源树创建源分布的虚拟环境的默认名称。
isolated_build = true

# 基本测试环境
# 描述运行测试驱动程序的环境。
[testenv]
description = run the test driver with {basepython}
passenv =
    PYTEST_XDIST_WORKER_COUNT
    PROGRAMDATA
    PROGRAMFILES(X86)
    PYTEST_ADDOPTS

# 使用的依赖来自 test-requirements.txt
deps =
    -r test-requirements.txt

    # 运行 pytest 测试。
    # This is a bit of a hack, but ensures the faster-cache path is tested in CI
    orjson;python_version=='3.12'
commands = python -m pytest {posargs}

# 开发环境
# 用于生成开发环境，包含所有项目库。
[testenv:dev]
description = generate a DEV environment, that has all project libraries
usedevelop = True
deps =
    -r test-requirements.txt
    -r docs/requirements-docs.txt
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'
    {posargs}

# 文档环境
# 用于使用 Sphinx 构建 HTML 文档。
[testenv:docs]
description = invoke sphinx-build to build the HTML docs
passenv =
    VERIFY_MYPY_ERROR_CODES
deps = -r docs/requirements-docs.txt
# 包含构建命令和输出文档路径的打印。
commands =
    sphinx-build -n -d "{toxworkdir}/docs_doctree" docs/source "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

# 代码风格检查
[testenv:lint]
description = check the code style
skip_install = true
deps = pre-commit
# 检查代码风格，使用 pre-commit 工具。
# 运行时会检查所有文件。
commands = pre-commit run --all-files --show-diff-on-failure

# 类型检查
# 使用 mypy 进行类型检查。
# 运行命令包括自检和特定目录的类型检查。
[testenv:type]
description = type check ourselves
passenv =
    TERM
    MYPY_FORCE_COLOR
    MYPY_FORCE_TERMINAL_WIDTH
commands =
    python runtests.py self
    python -m mypy --config-file mypy_self_check.ini misc --exclude misc/sync-typeshed.py
    python -m mypy --config-file mypy_self_check.ini test-data/unit/plugins
